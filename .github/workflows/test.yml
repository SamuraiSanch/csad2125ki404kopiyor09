name: Build Project

on:
  push:
    branches:
      - develop
      - feature/develop/task2
  pull_request:
    branches:
      - develop
      - feature/develop/task2

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Clone repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install CMake
      - name: Install CMake
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++

      # Install Boost
      - name: Install Boost
        run: |
          sudo apt-get install -y libboost-all-dev

      # Install and compile Boost
      - name: Build Boost
        run: |
          cd ~
          wget https://boostorg.jfrog.io/artifactory/main/release/1.86.0/source/boost_1_86_0.tar.gz
          tar -xzvf boost_1_86_0.tar.gz
          cd boost_1_86_0
          ./bootstrap.sh
          ./b2
          sudo ./b2 install

      # Run script build VS, then save result to build/vs/
      - name: Build Visual Studio Project
        run: |
          mkdir -p build/vs
          cd build/vs
          cmake ../..
          cmake --build .

      # Launch the Visual Studio executable and test its functionality
      - name: Run VS Executable
        run: |
          cd build/vs
          chmod +x csadkopiy09
          ./csadkopiy09 > result.log && echo "VS Executable ran successfully!" >> result.log || echo "VS Executable failed." >> result.log
          
      # Download the result file as an artifact
      - name: Upload Result Log
        uses: actions/upload-artifact@v3
        with:
          name: vs_executable_result
          path: build/vs/result.log

      # Archive binaries for creating artifacts (VS)
      - name: Archive VS Binaries
        uses: actions/upload-artifact@v3
        with:
          name: vs_binaries
          path: build/vs/

      # Download and install the Arduino CLI
      - name: Install Arduino CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh
          sudo mv bin/arduino-cli /usr/local/bin/
          arduino-cli core update-index

      # Install the core for Arduino Uno
      - name: Install Arduino Core
        run: |
          arduino-cli core install arduino:avr

      # Compile the .ino file and save it in build/arduino/
      - name: Build Arduino Project
        run: |
          mkdir -p build/arduino
          arduino-cli compile --fqbn arduino:avr:uno src/HW_task2/csadkopiy09/csadkopiy09.ino --output-dir build/arduino

      # Archiving Arduino binary files in build/arduino/
      - name: Archive Arduino Binaries
        uses: actions/upload-artifact@v3
        with:
          name: arduino_binaries
          path: build/arduino/
